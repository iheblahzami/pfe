{"ast":null,"code":"import { throwError } from \"rxjs\";\nimport { catchError } from 'rxjs/operators';\nimport { environment } from \"../../environments/environment\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    // private baseUrl = 'http://127.0.0.1:8005';\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = 'http://57.152.1.74:8005';\n    }\n    login(credentials) {\n      return this.http.post(`${this.baseUrl}/login`, credentials);\n    }\n    login2(username, password) {\n      this.http.post(`${environment.config.urlLogin}/api/login_check`, {\n        username,\n        password\n      }).pipe(map(response => {\n        // login successful if there's a jwt token in the response\n        if (response) {\n          localStorage.setItem('jwt', JSON.stringify(response));\n        }\n      }));\n    }\n    isLoggedIn() {\n      // Check if JWT token is present in localStorage\n      return !!localStorage.getItem('jwt');\n    }\n    logout() {\n      localStorage.removeItem('jwt');\n      // Optionally, you can clear other user-related data from localStorage\n      localStorage.removeItem('user');\n      this.router.navigate(['/login']);\n    }\n    register(credentials) {\n      return this.http.post(`${this.baseUrl}/register`, credentials).pipe(catchError(error => {\n        return throwError(error);\n      }));\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}