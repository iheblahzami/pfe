{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/IncomeServiceImpl\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction EditIncomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2, \"Edit Income\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function EditIncomeComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Month:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n    i0.ɵɵtext(10, \"Income Amount:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 8);\n    i0.ɵɵtext(13, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.incomeForm);\n  }\n}\nexport let EditIncomeComponent = /*#__PURE__*/(() => {\n  class EditIncomeComponent {\n    constructor(route, router, incomeService, fb) {\n      this.route = route;\n      this.router = router;\n      this.incomeService = incomeService;\n      this.fb = fb;\n      this.income = {\n        id: 0,\n        mois: '',\n        montantIncome: 0\n      }; // Initialize with default values\n    }\n\n    ngOnInit() {\n      this.initForm();\n      this.getIncomeDetails();\n    }\n    initForm() {\n      this.incomeForm = this.fb.group({\n        mois: ['', Validators.required],\n        montantIncome: [null, Validators.required]\n      });\n    }\n    getIncomeDetails() {\n      const id = this.route.snapshot.params.id;\n      this.incomeService.getIncome(id).subscribe(data => {\n        this.income = data;\n        // Patch the form values with the fetched income data\n        this.incomeForm.patchValue({\n          mois: this.income.mois,\n          montantIncome: this.income.montantIncome\n        });\n      }, error => {\n        console.error('Error fetching income details:', error);\n      });\n    }\n    onSubmit() {\n      // Update the income object with the form values\n      this.income.mois = this.incomeForm.value.mois;\n      this.income.montantIncome = this.incomeForm.value.montantIncome;\n      // Call the service method to update the income\n      this.incomeService.updateIncome(this.income.id, this.income).subscribe(() => {\n        console.log('Income updated successfully');\n        // Redirect to the incomes list page\n        this.router.navigate(['/incomes']);\n      }, error => {\n        console.error('Error updating income:', error);\n      });\n    }\n  }\n  EditIncomeComponent.ɵfac = function EditIncomeComponent_Factory(t) {\n    return new (t || EditIncomeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.IncomeService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  EditIncomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditIncomeComponent,\n    selectors: [[\"app-edit-income\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"edit-income-form\", 4, \"ngIf\"], [1, \"edit-income-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"mois\"], [\"type\", \"text\", \"id\", \"mois\", \"name\", \"mois\", \"formControlName\", \"mois\", \"placeholder\", \"Enter month\", \"required\", \"\"], [\"for\", \"montantIncome\"], [\"type\", \"number\", \"id\", \"montantIncome\", \"name\", \"montantIncome\", \"formControlName\", \"montantIncome\", \"placeholder\", \"Enter income amount\", \"required\", \"\"], [\"type\", \"submit\"]],\n    template: function EditIncomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditIncomeComponent_div_0_Template, 14, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.income);\n      }\n    },\n    dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".edit-income-form[_ngcontent-%COMP%]{max-width:400px;margin:0 auto;padding:20px;background-color:#f9f9f9;border-radius:10px}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px}.form-group[_ngcontent-%COMP%]{margin-bottom:20px}label[_ngcontent-%COMP%]{font-weight:700}input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%]{width:100%;padding:10px;font-size:16px;border-radius:5px;border:1px solid #ccc}button[_ngcontent-%COMP%]{display:block;width:100%;padding:10px;font-size:16px;color:#fff;background-color:#007bff;border:none;border-radius:5px;cursor:pointer;transition:background-color .3s ease}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n  });\n  return EditIncomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}